error[E0277]: `Cell<u32>` cannot be shared between threads safely
 --> $OUT_DIR[uniffi_uitests]/counter.uniffi.rs
  |
  | struct r#Counter { }
  |        ^^^^^^^^^ `Cell<u32>` cannot be shared between threads safely
  |
  = help: within `Counter`, the trait `Sync` is not implemented for `Cell<u32>`
  = note: if you want to do aliasing and mutation between multiple threads, use `std::sync::RwLock` or `std::sync::atomic::AtomicU32` instead
note: required because it appears within the type `Counter`
 --> tests/ui/interface_not_sync_and_send.rs:9:12
  |
9 | pub struct Counter {
  |            ^^^^^^^
note: required by a bound in `FfiConverterArc`
 --> $WORKSPACE/uniffi_core/src/ffi_converter_traits.rs
  |
  | pub unsafe trait FfiConverterArc<UT>: Send + Sync {
  |                                              ^^^^ required by this bound in `FfiConverterArc`

error[E0277]: `Cell<u32>` cannot be shared between threads safely
  --> tests/ui/interface_not_sync_and_send.rs:27:12
   |
27 | pub struct ProcMacroCounter {
   |            ^^^^^^^^^^^^^^^^ `Cell<u32>` cannot be shared between threads safely
   |
   = help: within `ProcMacroCounter`, the trait `Sync` is not implemented for `Cell<u32>`
   = note: if you want to do aliasing and mutation between multiple threads, use `std::sync::RwLock` or `std::sync::atomic::AtomicU32` instead
note: required because it appears within the type `ProcMacroCounter`
  --> tests/ui/interface_not_sync_and_send.rs:27:12
   |
27 | pub struct ProcMacroCounter {
   |            ^^^^^^^^^^^^^^^^
note: required by a bound in `FfiConverterArc`
  --> $WORKSPACE/uniffi_core/src/ffi_converter_traits.rs
   |
   | pub unsafe trait FfiConverterArc<UT>: Send + Sync {
   |                                              ^^^^ required by this bound in `FfiConverterArc`
